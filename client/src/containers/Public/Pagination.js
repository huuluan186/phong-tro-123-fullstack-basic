import React, { useEffect, useState } from 'react' // Import c√°c hook c·∫ßn d√πng
import { PageNumber } from '../../components' // Import component PageNumber
import { useSelector } from 'react-redux' // L·∫•y d·ªØ li·ªáu t·ª´ Redux store
import icons from '../../utils/icon' // Import icon

const { GrFormNextLink,GrFormPreviousLink } = icons // L·∫•y icon ƒëi·ªÅu h∆∞·ªõng

const Pagination = ({ number }) => {
    // L·∫•y d·ªØ li·ªáu s·ªë l∆∞·ª£ng b√†i vi·∫øt v√† danh s√°ch b√†i vi·∫øt t·ª´ Redux store
    const { count, posts } = useSelector(state => state.post)

    // State ƒë·ªÉ l∆∞u danh s√°ch c√°c trang hi·ªÉn th·ªã
    const [arrPage, setArrPage] = useState([])

    // State ƒë·ªÉ l∆∞u trang hi·ªán t·∫°i, kh·ªüi t·∫°o v·ªõi `number`
    const [currentPage, setCurrentPage] = useState(+number)

    const [isHideNext, setIsHideNext] = useState(false) // Bi·∫øn ƒë·ªÉ ki·ªÉm tra xem c√≥ ·∫©n n√∫t "ti·∫øp theo" hay kh√¥ng
    const [isHidePrev, setIsHidePrev] = useState(false) // Bi·∫øn ƒë·ªÉ ki·ªÉm tra xem c√≥ ·∫©n n√∫t "tr∆∞·ªõc ƒë√≥" hay kh√¥ng

    // üõ†Ô∏è X·ª≠ l√Ω t·∫°o danh s√°ch s·ªë trang hi·ªÉn th·ªã
    useEffect(() => {
        // T√≠nh s·ªë trang t·ªëi ƒëa d·ª±a tr√™n t·ªïng b√†i vi·∫øt
        let maxPage = Math.floor(count / posts.length)

        // X√°c ƒë·ªãnh kho·∫£ng trang hi·ªÉn th·ªã (tr√°nh hi·ªÉn th·ªã qu√° nhi·ªÅu s·ªë trang)
        let next = (currentPage + 2) > maxPage ? maxPage : (currentPage + 2)
        let prev = (currentPage - 2) <= 1 ? 1 : (currentPage - 2)

        // T·∫°o danh s√°ch c√°c s·ªë trang hi·ªÉn th·ªã
        let temp = []
        for (let i = prev; i <= next; i++) {
            temp.push(i)
        }
        setArrPage(temp) // C·∫≠p nh·∫≠t state danh s√°ch trang

        currentPage >= (maxPage - 2) ? setIsHideNext(true) : setIsHideNext(false)
        currentPage <= 3 ? setIsHidePrev(true) : setIsHidePrev(false)
        // 1 => (1 2 3 ... ->)
        //4 => (... 2 3 4)
        console.log('setIsHideNext: ', isHideNext)
    }, [count, posts, currentPage]) // Ch·∫°y l·∫°i khi s·ªë b√†i vi·∫øt ho·∫∑c trang hi·ªán t·∫°i thay ƒë·ªïi

    return (
        <div className='flex items-center justify-center gap-2 py-5'>
            {/* N√∫t chuy·ªÉn trang tr∆∞·ªõc ƒë√≥ */}
             {!isHidePrev && <PageNumber icon={<GrFormPreviousLink />} text={1} setCurrentPage={setCurrentPage}/>}
             {!isHidePrev &&  <PageNumber text={'...'} />}
            {/* Hi·ªÉn th·ªã danh s√°ch s·ªë trang */}
            {arrPage?.length > 0 && arrPage.map((item) => {
                return (
                    <PageNumber key={item} text={item}
                        currentPage={currentPage} setCurrentPage={setCurrentPage} />
                )
            })}
            {/* Hi·ªÉn th·ªã d·∫•u "..." ƒë·ªÉ bi·ªÉu th·ªã c√≥ th√™m nhi·ªÅu trang kh√°c */}
            {!isHideNext &&  <PageNumber text={'...'} />}

            {/* N√∫t chuy·ªÉn trang ti·∫øp theo */}
           {!isHideNext && <PageNumber icon={<GrFormNextLink />} text={Math.floor(count / posts.length)} setCurrentPage={setCurrentPage}/>}
        </div>
    )
}

export default Pagination
